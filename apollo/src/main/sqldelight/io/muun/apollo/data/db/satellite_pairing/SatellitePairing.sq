CREATE TABLE satellite_pairings (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    satellite_session_uuid TEXT NOT NULL UNIQUE,
    apollo_session_uuid TEXT NOT NULL UNIQUE,
    status TEXT AS io.muun.apollo.domain.model.SatellitePairing.Status NOT NULL,
    browser TEXT,
    os_version TEXT,
    ip TEXT,
    creation_date TEXT AS org.threeten.bp.ZonedDateTime NOT NULL,
    last_active TEXT AS org.threeten.bp.ZonedDateTime,
    encryption_key TEXT,
    is_in_use INTEGER AS Boolean NOT NULL
);

updateStatus:
UPDATE satellite_pairings
SET status = ?, browser = ?, os_version = ?, ip = ?, last_active = ?
WHERE apollo_session_uuid = ?;

updateLastActive:
UPDATE satellite_pairings
SET last_active = ?
WHERE apollo_session_uuid = ?;

expirePairing:
UPDATE satellite_pairings
SET status = 'EXPIRED'
WHERE satellite_session_uuid = ?;

selectAll:
SELECT *
FROM satellite_pairings
ORDER BY id ASC;

selectByApolloSessionUuid:
SELECT *
FROM satellite_pairings
WHERE apollo_session_uuid = ?;

selectBySatelliteSessionUuid:
SELECT *
FROM satellite_pairings
WHERE satellite_session_uuid = ?;

selectActivePairings:
SELECT *
FROM satellite_pairings
WHERE status == 'COMPLETE';

selectPairingInUse:
SELECT *
FROM satellite_pairings
WHERE is_in_use == 1
LIMIT 1;

setPairingInUse:
UPDATE satellite_pairings
SET is_in_use = (id == ?);
